#!/usr/bin/env bash

source "$( dirname "${BASH_SOURCE[0]}" )/../lib/defaults.sh"
source "$( dirname "${BASH_SOURCE[0]}" )/../lib/converters.sh"

declare command="$(basename "$0")"
declare subcommand="$1"

[ $# -gt 0 ] && shift

help(){
    cat<<__EOF__
    Usage
      m sound startupchime        [ YES | NO ]          # whether the startup chime is used
      m sound volumefeedback      [ YES | NO ]          # whether or not you hear feedback when the volume is changed
      m sound ui                  [ YES | NO ] [ x.x ]  # whether the UI bleeps and bloops are used
      m sound speechrecognition   [ YES | NO ]          # whether speech recognition is enabled
      m sound speechtotext        [ YES | NO ]          # whether speech-to-text is enabled
      m sound voiceover           [ YES | NO ]          # whether VoiceOver is enabled
      m sound powerchime          [ YES | NO ]          # whether the chime is used when power is connected/disconnected

      m sound alertflash          [ ON | OFF ]          # whether the screen should flash when you would normally hear an alert
      m sound alertvolume         [ 0 through 4 ]       # the volume of the alert sounds
__EOF__
}

startupchime(){
    local choice="$(_mcli_convert_yes_no_to_boolean "$1")"

    if [[ "${choice}" == "true" ]]; then
        sudo nvram -d SystemAudioVolume
    elif [[ "${choice}" == "false" ]]; then
        sudo nvram SystemAudioVolume=" "
    fi
}

volumefeedback(){
    value="$(_mcli_defaults_yes_no_to_integer "NSGlobalDomain" \
                                              "com.apple.sound.beep.feedback" \
                                              "$1")"

    echo "${command} ${subcommand}: ${value}"
}

alertflash(){
    value="$(_mcli_defaults_yes_no_to_integer "com.apple.systemsound" \
                                              "com.apple.sound.beep.flash" \
                                              "$1")"

    value="$(_mcli_defaults_yes_no_to_integer "com.apple.universalaccess" \
                                              "flashScreen" \
                                              "$1")"


    echo "${command} ${subcommand}: ${value}"
}

alertvolume(){
    osascript <<-HEREDOC
			tell application "System Preferences"
				close
				activate

				set current pane to pane "com.apple.preference.sound"
				delay 1
			end tell

			tell application "System Events"
				tell application process "System Preferences"
					tell tab group 1 of window "Sound"
						click radio button "Sound Effects"

						set value of slider "Alert volume:" to ${1}
					end tell
				end tell
			end tell
		HEREDOC

    echo "${command} ${subcommand}: ${1}"
}

ui(){
    value="$(_mcli_defaults_yes_no_to_integer "NSGlobalDomain" \
                                              "com.apple.sound.uiaudio.enabled" \
                                              "$1")"
    value="$(_mcli_defaults_yes_no_to_integer "com.apple.systemsound" \
                                              "com.apple.sound.uiaudio.enabled" \
                                              "$1")"
    value="$(_mcli_defaults_yes_no_to_boolean "com.apple.finder" \
                                              "FinderSounds" \
                                              "$1")"
    volume="$(_mcli_defaults_number           "com.apple.systemsound" \
                                              "com.apple.sound.beep.volume" \
                                              "$2")"

    echo "${command} ${subcommand}: ${value} ${volume}"
}

speechrecognition(){
    value="$(_mcli_defaults_yes_no_to_boolean "com.apple.speech.recognition.AppleSpeechRecognition.prefs" \
                                              "StartSpeakableItems" \
                                              "$1" \
                                              "global" \
                                              "sudo")"

    echo "${command} ${subcommand}: ${value}"
}

speechtotext(){
    value="$(_mcli_defaults_delete            "com.apple.speech.synthesis.general.prefs" \
                                              "TimeAnnouncementPrefs" \
                                              "global" \
                                              "sudo")"
    value="$(_mcli_defaults_yes_no_to_boolean "com.apple.speech.synthesis.general.prefs" \
                                              "TalkingAlertsSpeakTextFlag" \
                                              "$1" \
                                              "global" \
                                              "sudo")"
    value="$(_mcli_defaults_yes_no_to_boolean "com.apple.speech.synthesis.general.prefs" \
                                              "SpokenNotificationAppActivationFlag" \
                                              "$1" \
                                              "global" \
                                              "sudo")"
    value="$(_mcli_defaults_yes_no_to_boolean "com.apple.speech.synthesis.general.prefs" \
                                              "SpokenUIUseSpeakingHotKeyFlag" \
                                              "$1" \
                                              "global" \
                                              "sudo")"

    echo "${command} ${subcommand}: ${value}"
}

voiceover(){
    local choice="$(_mcli_convert_yes_no_to_load_unload "$1")"

    [ -z "${choice}" ] && return

    sudo sh -c "launchctl ${choice} -w /System/Library/LaunchAgents/com.apple.VoiceOver.plist 2> /dev/null"
    sudo sh -c "launchctl ${choice} -w /System/Library/LaunchAgents/com.apple.ScreenReaderUIServer.plist 2> /dev/null"
    sudo sh -c "launchctl ${choice} -w /System/Library/LaunchAgents/com.apple.scrod.plist 2> /dev/null"
}

powerchime(){
    value="$(_mcli_defaults_yes_no_to_boolean "com.apple.PowerChime" \
                                              "ChimeOnAllHardware" \
                                              "$1")"

    echo "${command} ${subcommand}: ${value}"
}

case "${subcommand}" in
    help)
        help
        ;;
    startupchime)
        startupchime "$@"
        ;;
    volumefeedback)
        volumefeedback "$@"
        ;;
    ui)
        ui "$@"
        ;;
    speechrecognition)
        speechrecognition "$@"
        ;;
    speechtotext)
        speechtotext "$@"
        ;;
    voiceover)
        voiceover "$@"
        ;;
    powerchime)
        powerchime "$@"
        ;;
    alertflash)
        alertflash "$@"
        ;;
    alertvolume)
        alertvolume "$@"
        ;;
    *)
        help
        ;;
esac

# vim: ts=4 sw=4 softtabstop=4 expandtab
