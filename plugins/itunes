#!/usr/bin/env bash

source "$( dirname "${BASH_SOURCE[0]}" )/../lib/defaults.sh"
source "$( dirname "${BASH_SOURCE[0]}" )/../lib/converters.sh"

declare command="$(basename "$0")"
declare subcommand="$1"

[ $# -gt 0 ] && shift

help () {
    cat<<__EOF__
    Usage:
      m itunes status                   # Show status
      m itunes play                     # Play track
      m itunes pause                    # Pause track
      m itunes next                     # Play next track
      m itunes prev                     # Play previous track
      m itunes mute                     # Mute iTunes
      m itunes unmute                   # Unmute iTunes
      m itunes vol up                   # Volume Up
      m itunes vol down                 # Volume Down
      m itunes vol #                    # Set volume level
      m itunes stop                     # Stop track
      m itunes quit                     # Quit iTunes
      m itunes autobackup [ YES | NO ]  # Whether to backup devices after sync
      m itunes mediakeys  [ YES | NO ]  # Whether to enable iTunes media keys
__EOF__
}

autobackup(){
    value="$(_mcli_defaults_yes_no_to_inverted_boolean "com.apple.iTunes" \
                                                       "AutomaticDeviceBackupsDisabled" \
                                                       "$1")"

    echo "${command} ${subcommand}: ${value}"
}

mediakeys(){
    [ -z "$1" ] && help && return

    value="$(_mcli_convert_yes_no_to_load_unload "$1")"

    launchctl "${value}" -w /System/Library/LaunchAgents/com.apple.rcd.plist 2> /dev/null
}

case "${subcommand}" in
    help)
        help
        ;;
    autobackup)
        autobackup "$@"
        ;;
    mediakeys)
        mediakeys "$@"
        ;;
    status)
        state="$(osascript -e 'tell application "iTunes" to player state as string')"
        echo "iTunes is currently $state."
        if [ "${state}" = "playing" ]; then
            artist="$(osascript -e 'tell application "iTunes" to artist of current track as string')"
            track="$(osascript -e 'tell application "iTunes" to name of current track as string')"
            echo "Current track $artist:  $track"
        fi
        ;;
    play)
        osascript -e 'tell application "iTunes" to play'
        ;;
    pause)
        osascript -e 'tell application "iTunes" to pause'
        ;;
    next)
        osascript -e 'tell application "iTunes" to next track'
        ;;
    prev)
        osascript -e 'tell application "iTunes" to previous track'
        ;;
    mute)
        osascript -e 'tell application "iTunes" to set mute to true'
        ;;
    unmute)
        osascript -e 'tell application "iTunes" to set mute to false'
        ;;
    vol)
        vol="$(osascript -e 'tell application "iTunes" to sound volume as integer')"

        case "$2" in
            up)
                newvol=$(( vol+10 ))    ;;
            down)
                newvol=$(( vol-10 ))    ;;
            [0-9]*)
                newvol=$2               ;;
            *)
                help  && exit 1         ;;
        esac
        osascript -e "tell application \"iTunes\" to set sound volume to $newvol"
        ;;
    stop)
        osascript -e 'tell application "iTunes" to stop'
        ;;
    quit)
        osascript -e 'tell application "iTunes" to quit'
        ;;
    *)
        help
        ;;
esac
