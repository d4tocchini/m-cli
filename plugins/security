#!/usr/bin/env bash

source "$( dirname "${BASH_SOURCE[0]}" )/../lib/defaults.sh"
source "$( dirname "${BASH_SOURCE[0]}" )/../lib/converters.sh"

declare command="$(basename "$0")"
declare subcommand="$1"

[ $# -gt 0 ] && shift

help(){
    cat<<__EOF__
    Usage:
      m security certificatechecking               [ YES | NO ]  # Whether to verify if certificates have been revoked
      m security adminauthorizationforpreferences  [ YES | NO ]  # Whether an administrators credentials is required for preference changes
__EOF__
}

certificatechecking() {
    choice="$(_mcli_convert_yes_no_to_boolean "$1")"

    if [[ "${choice}" == "true" ]]; then
        value="$(_mcli_defaults_string "com.apple.security.revocation" \
                                       "CRLStyle" \
                                       "RequireIfPresent")"

        value="$(_mcli_defaults_string "com.apple.security.revocation" \
                                       "OCSPStyle" \
                                       "RequireIfPresent")"
    else
        value="$(_mcli_defaults_delete "com.apple.security.revocation" \
                                       "CRLStyle")"

        value="$(_mcli_defaults_delete "com.apple.security.revocation" \
                                       "OCSPStyle")"
    fi

    echo "${command} ${subcommand}: ${value}"
}

adminauthorizationforpreferences() {
    security authorizationdb read system.preferences > "/tmp/system.preferences.plist" 2> /dev/null

    value="$(_mcli_defaults_yes_no_to_boolean "/tmp/system.preferences" \
                                              "shared" \
                                              "$1")"
    value="$(_mcli_defaults_number            "/tmp/system.preferences" \
                                              "timeout" \
                                              "900")"

    security authorizationdb write system.preferences < /tmp/system.preferences.plist 2> /dev/null

    echo "${command} ${subcommand}: ${value}"
}

case "${subcommand}" in
    help)
        help
        ;;
    certificatechecking)
        certificatechecking "$@"
        ;;
    adminauthorizationforpreferences)
        adminauthorizationforpreferences "$@"
        ;;
    *)
        help
        ;;
esac

# vim: ts=4 sw=4 softtabstop=4 expandtab
