#!/usr/bin/env bash

source "$( dirname "${BASH_SOURCE[0]}" )/../lib/defaults.sh"
source "$( dirname "${BASH_SOURCE[0]}" )/../lib/converters.sh"

declare command="$(basename "$0")"
declare subcommand="$1"

[ $# -gt 0 ] && shift

help(){
    cat<<__EOF__
    Usage:
      m scrolling direction       [ natural | inverted ]          # What direction the content moves when swiping
      m scrolling barvisibility   [ onlywhenscrolling | always ]  # When to show scroll bars
      m scrolling bounce          [ YES | NO ]                    # Whether to bounce at the end of scrolling
      m scrolling autoscrolldelay x                               # Set the delay before the windows contents begins to scroll when you drag content to the edge
      m scrolling momentum        [ YES | NO ]                    # Whether to use momentum when scrolling
__EOF__
}

direction(){
    local enabled;

    case "$1" in
        natural)
            enabled="true";;
        inverted)
            enabled="false";;
        *)
            enabled="$1";;
    esac

    value="$(_mcli_defaults_string "NSGlobalDomain" \
                                   "com.apple.swipescrolldirection" \
                                   "${enabled}")"

    echo "${command} ${subcommand}: ${value}"
}

barvisibility(){
    local mode;

    case "$1" in
        onlywhenscrolling)
            mode="Automatic";;
        always)
            mode="Manual";;
        *)
            mode="$1";;
    esac

    value="$(_mcli_defaults_string "NSGlobalDomain" \
                                   "AppleShowScrollBars" \
                                   "${mode}")"

    echo "${command} ${subcommand}: ${value}"
}

bounce(){
    value="$(_mcli_defaults_yes_no_to_boolean "/Library/Preferences/.GlobalPreferences" \
                                              "NSScrollViewRubberbanding" \
                                              "$1" \
                                              "global" \
                                              "sudo")"

    echo "${command} ${subcommand}: ${value}"
}

autoscrolldelay(){
    value="$(_mcli_defaults_number "NSGlobalDomain" \
                                   "NSDraggingAutoscrollDelay" \
                                   "$1")"

    echo "${command} ${subcommand}: ${value}"
}

momentum(){
    # Internal Trackpad
    value="$(_mcli_defaults_yes_no_to_boolean "NSGlobalDomain" \
                                              "AppleScrollAnimationEnabled" \
                                              "$1")"
    value="$(_mcli_defaults_yes_no_to_boolean "com.apple.AppleMultitouchTrackpad" \
                                              "TrackpadMomentumScroll " \
                                              "$1")"

    # External Trackpad
    value="$(_mcli_defaults_yes_no_to_boolean "com.apple.driver.AppleBluetoothMultitouch.trackpad" \
                                              "TrackpadMomentumScroll" \
                                              "$1")"

    # Mouse
    value="$(_mcli_defaults_yes_no_to_boolean "com.apple.driver.AppleBluetoothMultitouch.mouse" \
                                              "MouseMomentumScroll" \
                                              "$1")"

    echo "${command} ${subcommand}: ${value}"
}

case "${subcommand}" in
    help)
        help
        ;;
    direction)
        direction "$@"
        ;;
    barvisibility)
        barvisibility "$@"
        ;;
    bounce)
        bounce "$@"
        ;;
    autoscrolldelay)
        autoscrolldelay "$@"
        ;;
    momentum)
        momentum "$@"
        ;;
    *)
        help
        ;;
esac

# vim: ts=4 sw=4 softtabstop=4 expandtab
